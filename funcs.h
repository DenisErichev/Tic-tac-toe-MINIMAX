/* funcs.h – Листинг заголовочного файла проекта                                                               */
/***************************************************************************************************************/
/* Filename : funcs.h                                                                                          */
/* Abstract : Файл содержит вспомогательные функции для реализации корректной работы игры крестики нолики 5x5  */
/* Description :  Данный программный модуль дает возможность игрокам/игроку выбрать тип игры в крестики нолики:*/
/*'человек vs человек'-нажмите 1; 'человек vs компьютер'-нажмите 2', внести имена игроков, выбор "X" или "0",  */
/*реализация ходов в конктерные ячейки игровго поля                                                            */
/* Creation Date : 2022 / 05 / 21                                                                              */
/* Author : Еричев Денис                                                                                       */
/* Notes / Platform / Copyrights : OS Linux, FreeWare                                                          */
/***************************************************************************************************************/
#ifndef FUNC_H
#define FUNC_H
#include <iostream>
#include "ai.h"
/***********************************************************************************************/
/* Функция: void play_field()                                                                  */
/* Цель: Вывод текущего игрового поля в консоль, при помощи одномерного целочисленного массива */
/* Исходные данные:                                                                            */
/* Вызываемые модули: main.cpp                                                                 */
/* Описание алгоритма: Вывод в консоль ячеек массива на 25 ячеек                               */
/* Дата: 2022 / 05 / 21 Версия 1.01                                                            */
/* Автор: Еричев Д.А.                                                                          */
/* Исправления: нет                                                                            */
/***********************************************************************************************/
void play_field(){
    cout<<"Поле со значениями:"<<endl;
    cout<<"  ___1_____2_____3_____4_____5___"<<endl;
    cout<<"1 |  0  |  1  |  2  |  3  |  4  |"<<endl;
    cout<<"2 |  5  |  6  |  7  |  8  |  9  |"<<endl;
    cout<<"3 | 1 0 | 1 1 | 1 2 | 1 3 | 1 4 |"<<endl;
    cout<<"4 | 1 5 | 1 6 | 1 7 | 1 8 | 1 9 |"<<endl;
    cout<<"5 |_2 0_|_2 1_|_2 2_|_2 3_|_2 4_|"<<endl;
    cout<<endl;
    cout<<"|  "<<field[0]<<"  |  "<<field[1]<<"  |  "<<field[2]<<"  |  "<<field[3]<<"  |  "<<field[4]<<"  |"<<endl;
    cout<<"|  "<<field[5]<<"  |  "<<field[6]<<"  |  "<<field[7]<<"  |  "<<field[8]<<"  |  "<<field[9]<<"  |"<<endl;
    cout<<"|  "<<field[10]<<"  |  "<<field[11]<<"  |  "<<field[12]<<"  |  "<<field[13]<<"  |  "<<field[14]<<"  |"<<endl;
    cout<<"|  "<<field[15]<<"  |  "<<field[16]<<"  |  "<<field[17]<<"  |  "<<field[18]<<"  |  "<<field[19]<<"  |"<<endl;
    cout<<"|  "<<field[20]<<"  |  "<<field[21]<<"  |  "<<field[22]<<"  |  "<<field[23]<<"  |  "<<field[24]<<"  |"<<endl;
}
/***********************************************************************************************/
/* Функция: int check_input()                                                                  */
/* Цель: Проверка введенногго значения пользователем, оно должно быть-целочисленным значением-1*/
/* или 2                                                                                       */
/* Исходные данные:                                                                            */
/* Вызываемые модули: нет                                                                      */
/* Описание алгоритма: Если пользователь ввел не число, или оно не является-1 или 2, то буфер  */
/*очищается и пользователю дается  ввести значение, пока оно не будет корректным               */
/* Дата: 2022 / 05 / 21 Версия 1.01                                                            */
/* Автор: Еричев Д.А.                                                                          */
/* Исправления: нет                                                                            */
/***********************************************************************************************/
int check_input(){
    int number;
    while (!(cin >> number)  || (number<1) || (number>2)){
        cin.clear();
        while (cin.get() != '\n');
        cout << "Нужно ввести число 1 или 2! Введите еще раз: ";
    }
    return number;
}
/***********************************************************************************************/
/* Функция: bool check_pos(int index)                                                          */
/* Цель: Проверить на пустоту ячеки игрового поля целочисленного значения                      */
/* или 2                                                                                       */
/* Исходные данные: index- индекс ячейки для проверки на пустоту                               */
/* Вызываемые модули: нет                                                                      */
/* Описание алгоритма: Если в текущей ячейки "X" или "0", то вернуть истину, иначе ложь        */
/*очищается и пользователю дается  ввести значение, пока оно не будет корректным               */
/* Дата: 2022 / 05 / 21 Версия 1.01                                                            */
/* Автор: Еричев Д.А.                                                                          */
/* Исправления: нет                                                                            */
/***********************************************************************************************/
bool check_pos(int index){
    if(field[index]=='X' || field[index]=='0'){
        return true;
    }
    return false;
}
/***********************************************************************************************/
/* Функция: int check_input_move()                                                             */
/* Цель: Проверка введенного индекса пользователем чтобы сделать ход в конкретную ячейку,      */
/*оно должно быть-целочисленным значением от 0 до 25, а также оно должно быть пустым           */                  
/* Исходные данные:                                                                            */
/* Вызываемые модули:  main.cpp                                                                */
/* Описание алгоритма: Если пользователь ввел не число, или оно не является числом- от 0 до 25,*/
/*то буфер очищается и пользователю дается  ввести значение, пока оно не будет корректным      */                                                                                     
/*очищается и пользователю дается  ввести значение, пока оно не будет корректным               */
/* Дата: 2022 / 05 / 21 Версия 1.01                                                            */
/* Автор: Еричев Д.А.                                                                          */
/* Исправления: нет                                                                            */
/***********************************************************************************************/
int check_input_move(){
    int number;
    while (!(cin >> number) || (number>24) || (number<0) || check_pos(number)){
        if(check_pos(number)){
            cin.clear();
            while (cin.get() != '\n');
            cout<<"Позиция "<<number<<" занята, введите снова: ";
        }else{
            cin.clear();
            while (cin.get() != '\n');
            cout << "Нужно ввести число от 1 до 24! Введите еще раз: ";
        }
    }
    return number;
}
/***********************************************************************************************/
/* Функция: void move(string name, int position,char choice)                                   */
/* Цель: Реализация хода для игроков                                                           */
/*оно должно быть-целочисленным значением от 0 до 25, а также оно должно быть пустым           */                  
/* Исходные данные: name-имя игрока, position-позиция ячейки, choice- "X" или "0"              */
/* Вызываемые модули: funcs.h,main.cpp                                                         */
/* Описание алгоритма: Позиция проверяется на корректность при помощи функции check_input_move()*/
/*если позиция корректна, то ячеке массива присваивается "X" или "0"                           */                                                                                     
/*очищается и пользователю дается  ввести значение, пока оно не будет корректным               */
/* Дата: 2022 / 05 / 21 Версия 1.01                                                            */
/* Автор: Еричев Д.А.                                                                          */
/* Исправления: нет                                                                            */
/***********************************************************************************************/
void move(string name, int position,char choice){
    cout<<"Ходит "<<name<<", и играет "<<choice<<"."<<endl;
    cout<<"Выберите позицию: ";
    position=check_input_move();
    field[position]=choice;
}
/***********************************************************************************************/
/* Функция: void check_win(string name)                                                        */
/* Цель: Проверка на выигрыш игроков на каждом ходе, и уведомлении об этом.                    */
/*оно должно быть-целочисленным значением от 0 до 25, а также оно должно быть пустым           */                  
/* Исходные данные: name-имя игрока, position-позиция ячейки, choice- "X" или "0"              */
/* Вызываемые модули: main.cpp                                                                 */
/* Описание алгоритма: Вызывается функция проверки выигрышных позиций на поле, если выиграл    */
/*один из игроков, то выводится его имя и программа завершается                                */                                                                                     
/* Дата: 2022 / 05 / 21 Версия 1.01                                                            */
/* Автор: Еричев Д.А.                                                                          */
/* Исправления: нет                                                                            */
/***********************************************************************************************/
void check_win(string name){
    if(win(first_choice)){
        play_field();
        cout<<"Выиграл "<<first_player<<"!"<<endl;
        exit(1);
    }else if(win(second_choice)){
        play_field();
        cout<<"Выиграл "<<second_player<<"!"<<endl;
        exit(1);
    }
}
/***********************************************************************************************/
/* Функция: void tie_game()                                                                    */
/* Цель: Если все 25 ячеек заняты, и нет выигрышных позиций, то будет выведена надпись ничья.  */
/*Вызывается в main.cpp после циклов for                                                       */ 
/*оно должно быть-целочисленным значением от 0 до 25, а также оно должно быть пустым           */                  
/* Исходные данные: нет                                                                        */
/* Вызываемые модули: main.cpp                                                                 */
/* Описание алгоритма: Вызывается функция проверки выигрышных позиций на поле, если она вернула*/
/*ложь, то выведется надпись ничья                                                             */                                                                                     
/* Дата: 2022 / 05 / 21 Версия 1.01                                                            */
/* Автор: Еричев Д.А.                                                                          */
/* Исправления: нет                                                                            */
/***********************************************************************************************/
void tie_game(){
    if(tie(field)){
        play_field();
        cout<<"Ничья! Игра окончена."<<endl;
    }
}
#endif